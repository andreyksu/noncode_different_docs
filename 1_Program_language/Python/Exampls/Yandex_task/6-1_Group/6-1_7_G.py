import numpy as np


def make_board(sizee):
    aa = np.zeros((sizee, sizee), dtype="int8")

    for i in range(0, sizee):
        tmpList = list()
        if i % 2 != 0:
            z = 0
        else:
            z = 1
        startt = 0 + z
        endd = (sizee) + z
        for k in range(startt, endd):
            ress = k % 2
            tmpList.append(k % 2)
        a = np.array(tmpList)
        aa[i] = a
    return aa


print(make_board(4))
print(make_board(6))


"""
Шахматная подготовка
Представьте, что вы пишете компьютерную игру «Шахматы». Вам надо смоделировать шахматную доску, которая представляет собой матрицу. Чёрная клетка представляется нулём, а белая — единицей. Если смотреть на доску сверху, то левая верхняя клетка — белая.

Напишите функцию make_board, которая принимает размер шахматной доски, и возвращает матрицу, моделирующую заданную доску.

Установите тип элементов матрицы int8.

Примечание
Ваше решение должно содержать только функции.
В решении не должно быть вызовов требуемых функций.

Пример 1
Ввод
    print(make_board(4))
Вывод
    [[1 0 1 0]
    [0 1 0 1]
    [1 0 1 0]
    [0 1 0 1]]
Пример 2
Ввод
    print(make_board(6))
Вывод
    [[1 0 1 0 1 0]
    [0 1 0 1 0 1]
    [1 0 1 0 1 0]
    [0 1 0 1 0 1]
    [1 0 1 0 1 0]
    [0 1 0 1 0 1]]
"""