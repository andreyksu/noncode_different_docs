# Переделать через стек. По аналогии с 3-1_19_S.py

inputed_str = input()

list_of_binar_oper = ["+", "-", "*", "/"]
list_of_unar_oper = ["~", "!", "#"]
list_of_ternar_oper = ["@"]

# TODO: Сделать через стек.

"""
Польский калькулятор — 2

Потренируемся в ОПН дальше. Операции, которые выполняются с одним значением, называются унарными, с двумя — бинарными, с тремя — тернарными. Давайте улучшим наш калькулятор, добавив поддержку следующих операций:

    бинарные:
        + (сложение),
        - (вычитание),
        * (умножение),
        / (деление нацело; для отрицательных чисел работает по тем же правилам, что и в Python);
    унарные:
        ~ (унарный минус — меняет знак),
        ! (факториал),
        # (клонирование — вернуть в стек значение дважды);
    тернарные:
        @ (возвращает в стек те же три значения, но в ином порядке: второе, третье, первое).

Формат ввода

Вводится одна строка, содержащая разделённые пробелами целые числа и знаки операций. Вместе они составляют корректное выражение в обратной польской нотации, не содержащее деления на ноль и взятия факториала от отрицательного числа.
Формат вывода

Выводится одно целое число — результат вычисления выражения.
Примечание

В первом примере стек по мере прочтения строки выглядит так:

    7
    7 1
    7 1 10
    7 1 10 100
    7 1 10 100 100
    7 1 10 10000
    7 10 10000 1
    7 10 9999
    7 10009
    10016
    -10016

Пример 1
    Ввод
    7 1 10 100 # * @ - + + ~
    Вывод
    -10016

Пример 2
    Ввод
    10 15 - 7 *
    Вывод
    -35

"""
