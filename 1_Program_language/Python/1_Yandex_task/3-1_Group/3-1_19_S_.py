# NB! Переделать на извлечение из pop. Для этого list нужно развернуть.

inputed_str = input()

listt = inputed_str.split()
fuzze = True
position = 0
while fuzze:
    if (listt[position].isalnum()) or (
        listt[position].startswith("-") and listt[position][1:].isdigit()
    ):
        position += 1
        continue
    else:
        result = 0
        first_position = position - 2
        second_position = position - 1
        first = int(listt[first_position])
        second = int(listt[second_position])
        oper = listt[position]

        if oper == "*":
            result = first * second
        elif oper == "**":
            result = first**second
        elif oper == "/":
            result = first / second
        elif oper == "%":
            result = first % second
        elif oper == "//":
            result = first // second
        elif oper == "-":
            result = first - second
        elif oper == "+":
            result = first + second

        tmp_list = listt[: position - 2]
        tmp_list.append(str(result))
        listt = tmp_list + listt[position + 1 :]
        if len(listt) == 1:
            fuzze = False
        position = 0

print(listt[0])


"""
Польский калькулятор

Напишите программу, которая производит вычисление выражения, записанного в обратной польской нотации (ОПН).

В ОПН нет ни скобок, ни приоритета операторов («умножение раньше сложения»).

Чтобы прочитать выражение, записанное в таком формате, нужно просматривать выражение строго последовательно. Вводимые значения последовательно добавляются в стек. Когда встречается символ операции, то из стека извлекаются последние положенные туда значения, с ними проделывается эта операция и результат возвращается в стек.

Если для операции важен порядок значений, с которыми она производится, то первым идёт число, лежавшее в стеке глубже. В частности, если операция — вычитание, то из предпоследнего числа в стеке вычитается последнее, а не наоборот.

Изначально стек пустой, в результате полного вычисления выражения в нём должно остаться одно значение — результат вычислений.

Первый пример следует читать так: в стек последовательно добавляются значения 7 2 3, а затем встречаем знак операции *. Тогда значения 2 и 3 извлекаются, перемножаются, результат 6 кладётся обратно в стек. Следующий знак извлекает из стека два оставшихся в нём значения 7 и 6, вычитает одно из другого и кладёт результат снова в стек. Выражение закончилось, в стеке одно число — 1, это и есть результат вычисления.
Формат ввода

Вводится одна строка, содержащая разделённые пробелами целые числа и знаки операций +, -, *, которые вместе составляют корректное выражение в обратной польской нотации.
Формат вывода

Выводится одно целое число — результат вычисления выражения.
Пример 1
Ввод
7 2 3 * -
Вывод
1

Пример 2
Ввод
10 15 - 7 *
Вывод
-35

"""
