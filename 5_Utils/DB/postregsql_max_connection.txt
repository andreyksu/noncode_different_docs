Just increasing max_connections is bad idea. You need to increase shared_buffers and kernel.shmmax as well.
change
max_connections = 100
shared_buffers = 24MB

to
max_connections = 300
shared_buffers = 80MB

Increase max_connection and shared_buffers
    If you have a system with 1GB or more of RAM, a reasonable starting value for shared_buffers is 1/4 of the memory in your system.

Change kernel.shmmax
    You would need to increase kernel max segment size to be slightly larger than the shared_buffers.
    In file /etc/sysctl.conf set the parameter as shown below. It will take effect when postgresql reboots (The following line makes the kernel max to 96Mb)

----------------------------------
Пример мониторинга за утилизацией жестких дисков и процессора (аггригация идет за указанный интервал т.е. относительно примера цифра 30 будет означать не только интервал но и в течении которого времени будет суммироваться и усредняться значения)

    iostat -xdtc 30 10000 | tee /opt/log_iostat_03_17.log
----------------------------------
Мониторинг размера жесткого диска

    FILE_NAME_DF="/opt/df_2023-03-17.log"
    watch -n 600 "date >> $FILE_NAME_DF; df -m >> $FILE_NAME_DF; echo '---------------------------' >> $FILE_NAME_DF"
----------------------------------
Мониторинг запросов к табличке pg_stat_activity и каждый запрос записывается в файлик с наименованием даты.

    while true; do psql -c "SELECT * FROM pg_stat_activity where state = 'active';" > `date +"%Y-%m-%d___%H_%M_%S"`.log; sleep 1; done
----------------------------------
Пример обработки файлов полученных из предыдущего запроса. Здесь считаем сколько запросов к базе для пользователя "app_d" и драйвера "PostgreSQL"

    for i in $(ls -1); do echo -n "$i   "; grep -P "app_d.*PostgreSQL JDBC Driver" $i | wc -l; done > log.log
----------------------------------
Вывод наименования файла и количества строк в этом файле (упрощённая версия запроса, что располагается выше).
    for i in `ls -1`; do echo -n "$i   "; cat $i | wc -l; done
----------------------------------

tcl - для взаимодействия с командной строчкой, когда требуется вводить параметры.

----------------------------------
while true; do systemctl start jboss_cli_connection@`date +"%Y_%m_%d___%H_%M_%S"`; done

while true; do psql -c "SELECT * FROM pg_stat_activity where usename = 'app_d' and datname = 'dogmat';" > `date +"%Y-%m-%d___%H_%M_%S"`.log; sleep 1; done
----------------------------------
for i in $(ls -1); do echo -n "$i   ";grep -P "MaxGetTime.*[0-9]{2,5}" $i; done > /opt/log_vteDS_1.log
----------------------------------
#!/bin/bash

echo "name active idle idle__in_tr" > /opt/tr.log

for i in $(ls -d1 /opt/tmp/*)
do
    active=$(grep -P "active" $i | wc -l)
    idle=$(grep -P "idle(?! in)" $i | wc -l)
    idle_tr=$(grep -P "idle in transaction" $i | wc -l)
    echo "$i $(($active+$idle+$idle_tr)) $active $idle $idle_tr" >> /opt/tr.log
done
----------------------------------
for var in $(ls -1 | grep off); do chown -R $var:$var $var; find $var -type d -exec chmod 777 {} \;; find $var -type f -exec chmod 664 {} \;; done
----------------------------------
find ./ -type d  | exec sort -r | while read P; do find $P -type f -exec pdpl-file -v "0:0:0x0" {} \; && pdpl-file "0:0:0x0" $P; done