	Глава 1. Введение

		1.1. Варинат использования:
			- Вариант использования описывает поведение системы при ее ответах на запрос одного из участинков, называемого основным действущим лицом, в различных уловиях.
			Основное действующее лицо инициирует взаимодействие с системой, чтобы добиться некоторой цели. Система отвечает соблюдая интересы всех участников.

			- Три понятия:
				Scope - область действия
				Primary Actor - основное действующее лицо.
				Level - уровень. 
						Как я понял, на каком уровне из действующих лиц рассматривается кейс (а вернее не действующих лиц, а по отношению к участникам, это может быть предприятие, система, железо итд)
				Действующее лицо (Actor) - (кто-то или что-то) обладающий поведением.
				Участник (StakeHolder) - (кто-то или что-то) проявляющий интерес к поведению рассматриваемой системы (SuD)
				Основное действующее лицо (Primary actor) - (кто-то или что-то) инициирующий взаимодействие с SuD для достижения некторой цели.
				Вариант использования (UC) - соглашение относительно поведения SuD

			- Автор рекамендует, не гнаться за точностью и строгостью - главное, что бы было понятно др. участникам проекта (а после утверждения можно и детализирвоать и то при потребности). Т.е. выделяются и фиксируются основные кейсы, описываются обобщенно, а потом только детализируются.

			- При выявлении требований, мы лишь документируем и определяем как работает система или процесс сейчас. Однако автоматизация процессов часто 	МЕНЯЕТ процесс. По этому одной из задач является создать представление и донести его до др. людей.


		1.3. Требования и варианты использования

			- Нужно помнить, что UC покрывает лишь часть требований (примерно 1/3), по этой причине от требований полностью не нужно отказываться (требования описанные и стурктурированные дадут не меньше пользы).
			- Но важно помнить, что требования должны вестись подобающим образом, желательно сразу в системе ведения требований.

		1.4. Когда варианты использования повышают ценность проекта.
			
			- Варианты использования связанно рассказывют о поведении системы при ее испльзовании (и увязывают требования в логическую цепочку).

			- Особенно полезно в вариантах использования это выделение "целей пользователя" - т.е. в UC во голову угла ставят цели пользователя. И дальше описываются именно они в виде UC.
				* Изначально этот список/перечнь описывается отдельно и на базе него можно оценивать сложность проекта.

			- UC важны, когда оцениваются методом мозгового штурма все кейсы/ситуации, что могут поломать/нарушить основные целевые кейсы (т.е. привести в тупик итд).
				* Т.е. так называемое обдумывание отказов.

		1.5. Дозируйте уровень
			
			- Нужно начиать с малой детализации но описать как можно больше функционала (т.е. как бы взягляд с 15км)
			- Дальше можно детализировать, как бы скроллируя карту (изменяя масштаб с 1:1 000 000 на 1:500 000 и далее 1:250 000 итд)
				* Такой подход избавит от детализации ошибочных требований (которые не являются важными и правильно выделенными) на первом этапе(и еще менее детализированные проще проверить)

			4ре стадии точности:
				1. Действующие лица и цели.
					Перечислите действующих лиц и каждую из целей действующего лица, которые будет обеспечивать система. По итогам будут функциональные требования к перому уровню точности.
				2. Краткое изложение варианта использовани или основной сценарий.
					Описать основной сценарий в общих чертах. Второй уровень точности функциональных требований.
				3. Условия отказа
					Продумайте и запишите все возможные варианты отказа (можно пока без детализации, просто перечислением)
				4. Обработка отказов
					Опишите как системадолжна реагировать на каждый отказ.

		1.6. Разминка с помощью повествовательного стиля:
			Бывает перед началом описания UC стоит описать повествовательно действия пользователя а может весь день работы, это поможет вычленить уже UC.

Часть 1 Составные части варианта использования.

	Глава 2. Вариант использования как соглашение о поведении.
		Каждое предложение в варианте использования описывает действие, защищающее некоторый интресе какого-либо участника.
		
		Вариант использования как: Способ фиксации взаимодействия участников имеющих опредленные цели, и как соглашение между участниками.

	2.1. Взаимодействия действующих лиц, имеющих цели

		Действующие лица имеют цели.
			- При выполнении поставленной цели, действующее лицо обращается к системе (или др. действующему лицу), та в свою очередь формирует подцели (где могут быть включены вспомогательные лица). Достижение основной цели, достигается при достижении и выполнении всех подцелей.

			- При выполнении цели или подцелей у действующего лица должен быть план при отказе в работе одного из звена (допустим ситема не отвечает, а записать заявку что по телефону диктует пользователь/клиент нужно. для этого можно прибегнуть к листу с ручкой. Или же запросили в банкомате больше чем есть на счете, то должна быть одна реакция, или же если бы ввели неверный пароль).

			- Опять же см. 1.6. бывает полезно описать крупный сценрий а потом детализировать каждый из шагов.

	2.2. Соглашение между участниками, имеющими интересы
		Модель ДЕЙСТВУЮЩИЕ ЛИЦА и ЦЕЛИ объясняет. как писать предложения в варианте использования, но не касается необходимости описывать внутреннее поведение рарабатываеомй системы.

		Выписать всех участников и озаглавить их цели, и описать, что значит для каждого успешное завершение UC. Нужно проследить, что все будут удовлетворены от момента начала UC до его окончания или защищены (т.е. при выполнении UC главным действующем лицом, все остальные лица, должны быть защищены).

	2.3. Графическая модель
		Название UC - это цель основного действующего лица.

	Глава 3. Обалсть действия:
		Создать таблицу из трех столбцов и ведите ее с самого начала.
				Предмет/действие	Внутри	Вне

		3.1. Функциональная область действия
			Относится к услугам, которые предоставляет система, и которые будут зафиксированы в вариантах использования.

			Создать список Действующее лицо/Цель
				Здесь перечислены все цели пользователя, которые поддерживает система, иными словами, ее функциональное содержимое (т.е. функциональная область действия).
				В первую колонку выписываются все действующие лица, во второй цели по отношению к системе, а третья вес/приоритет.
					* Опять же на первом этапе не стоит сильно детализировать, главное составить список, потом уже детализировать.

		3.2. Область действия проектирования
			- Это рамки системы. При этом идет речь именно о проектировании, так как функциональная область действия описываются списком - Действующее лицо/Цели.
			- Для очерчивания области действия проектирования - нужно для каждого UC писать область действия (это предприятие, сам ПК, сервер, клиент итд). Так как из действующего лица или UC это не ясно.


				* Допустим, формирование заказа для покупки ПК в Ситилинк. Два очивидных кейса, сам заказ от пользователя, и обработка заказа служащими Ситилинк. Вот при описании двух кейсов, нужно упомянуть, с какой стороны раскрывается кейс. Т.е. два кейса: 
					# В первом случае Ситилинк как компания - хочется знать как выгдядит для пользователя обслуживание компанией, как реализуеются услуги.
					# Во втором Сама система - знать, как выглядет работа с системой изнутри со стороны компании, т.е. служащего.


		3.3. Предельные варианты использования.
			Детализация на стр. 66-67
		3.4. Использование рабочих результатов определения области действия.

	Гоава 4. Участники и действующие лица.

		4.1. Участники:
			Кто-то или что-то имеющий законный интерес в поведении, реализуемом в варианте использования.
				Часть учасников взаимодействуют с системой, а часть нет - даже если имеют право проявляеть интерес к поведению системы (налоговые органы и иные государственные органы, отдел безопасности итд)

		4.2. Основоное действующее лицо
			Это участник, который обращается к системе за одной из ее услуг. По тношению к системе он имеет цель, кторая может быть достигнута в результате работы с этой системой. Основное действующее лицо часто является, кто запускает вариант использования(но не всегда, допустим звонок от клиента, а дальше служащий).

	Глава 5. Три поименованных уровня цели
		Есть цели пользователя, а есть цели выше этого уровня (обобщенные варианты исользования) и ниже этого уровня (нижние подцели, что нужно выполнить для достижения основной цели). Нужно уметь отделять и выделять такие цели. Основными целями являются цели пользователя.
			* Сковзь 6 глав автор предлагает писать сначала обобщенные UC а потом из них выделять/детализировать более точные UC (по сути из высокоуровневого UC собираются UC более низкого уровня)

		Как правило обобшенными вариантами использовния принято характеризовать как "долгоиграющиего" варианта использования, но нужно понимать что эти варианты использования как бы в большом масштабе (на карте, когда мы находитмся слишком высоко т.е. удалены и процессы видем укрупненно)

		5.5. Выявление правильной цели пользователя
			Два правила:
				- Выявите цель пользователя
					* Чего на самом деле хочет пользователь?
					* Почему действующее лицо это делает?

						# Название варианта использования указывает, почему этот процесс представляет интерес.
						# Задавая вопрос "почему он этот делает" будет цель одним уровнем выше.						

				- Используйте от трех до 10 шагов на вариант использования.					
					* Стоит подниматься вверх, что бы было не более 10 шагов в UC.
					* Удалите подробности интерфейса пользователя. Покажите намерения действующего лица, а не его перемещение.
					* Повысьте уровень цели, задавя вопрос "почему", что бы поределить следующий более высокий уровень цели.

						# Когда мы поднимаемся вверх или опускаемся вниз, нам стоит подчеркивать те слова и цели что будут расшиты более нижними UC.


	Глава 6. Предусловаия, триггеры и гарантии.

		6.1. Предусловия
			Как правило, предусловие раскрывается в др. UC.

		6.2. Минимальные гарантии:
			Это наименьшие обещения системы участникам (если цель основного действующего лица не может быть достигнута).
				Как правило минимальной гарантией, является то что система зарегистировала точку, до которой он продвинулся (журналирование).

		6.3. Гарантия успеха:
			Устанавливает, что интересы участников удовлетворятюся при успешном завершенииварианта использования в коцне основного сценария или в конце успешного альтернативного пути.

		6.4. Триггеры
			Определяте событие, которое запускает варинат использования.
				Как правило является либо первым шагом, либо нулевым шагом

	Глава 7. Сценарии и шаги

		7.1. Основной сценарий
			Общая структура:
				- Уловие, при котором работает сценарий.
					* Как правило для основного сценария это - предусловие вместе с тригером.
				- Цель
					* Для основного сценария это название UC.
					* Соответствует интересам участников. Для сценарий расширения целью является либо достижение цели варианта использования, либо воссоединение с оновным сценарием после обработки условия.
				- Набор шагов действия
				- Условие окончания
					* Цель достигается в конце основного сценария. Фрагмент сценария может заканчиваться достижением цели либо отказом от нее.
				- Возможный набор расширений, написанный в виде фрагментов сценария.

			
			Сначала создается сценарий от начала до конца с описанием одного простого для понимания и довольно типичного сценария, в котором достигается цель основного действующего лица и удовлетворяются интересы всех участников - это ОСНОВНОЙ СЦЕНАРИЙ.

			Правила:
				1. Используйте простые предложения
				2. Пишите/дайте понять кто владеет мячом.
				3. Пишите, глядя на UC с высоты птичьего полета.
					п.2 и п.3 	Клиент вводит в банкомат карточку и PIN-код.
								Система снимает сумму с остатка на счете.
				4. Покажите продвижение процесса
					Это про количество шагов, их не должно быть больше 10. Лучше отдельным кейсом уточнить некторые детали.
				5. Показывйте намерение, а не движения действующего лица
					Примером плохого варианта может быть диалог с UI. Это лишь увеличивает в объеме кейс и усложняет его для восприятия. Это лишь отображает, как автор себе представляет UI.
				6. Включайте "рациональный набор действий"
					?
				7. "Подтвердить" а не "Проверить"
					Система должна подтверждать. Проверка не отображает продвижения процесса вперед. Да еще и придется писать "если система прошла проверку" а если нет итд.
				8. Указывайте и именуйте действюущие системы "Пользователь использует систему А для получения данных от системы Б"
				9. Если действия повторяются то укажите их и прямо напишите, при условии таком-то они повторяются.

	Глава 8. Расширения
		В вариант использования должен входить все сценарии, как успешные таки приводящие к неудаче.

		8.1. Расширение. Основные положения.
			- Часто расширения заканчиваются воссоединением с основным сценарием. Расширение описывает что происходит при определенном условаии, и заканчивается достижением цели или отказом от нее.
			- Обычно в точках расширение обнаружаются самые инетерсные требования и бизнес-правила.

			Рекамендации:
				1. Хорошо обдумать и включить каждую возможность, которую вы только можете вообразить.
				2. Оцените, исключите и объедините идеи в соответствии справилами 8.2
				3. Продумайте как пробраться через все эти системыне обработки условий.

		8.2. Условия расширения:
			Очень важно зафиксировать все возможные исключения - а лишь потом их детализировать.
			Если исключение может произойти в любой момент то стоит его пометить *. Сеть недоступна.

			Выявив список возможных исключений и условий:
				- Удалите те условия, что системе не должна обрабатывать.
				- Объедините те, которые оказывают на систему одинаковое результирующее воздействие (карточка сломана, карточка размагнитилась, поцарапана итд это одно условие)
				- Два критерия.
					* Системе должна быть способна обнаружить это условие
					* Система должна обрабатывать обнаружение условия.
				- Сделайте необнаруживаемые условия обнаруживаемыми, прежде чем их удалять.

			Свертывайте ошибки:
				стр. 130 книги или (107-108 внутренняя нумирация).

		8.3. Обработка расширений
			В общем случае представляет собой новый вариант использования. Расширение может завершаться достижением цели или отказом от нее. Пишите пока не достигнете места, где можно воссоединиться с основным сценарием, или пока вариан использования не закончится неудачей.

			Ошибки внутри ошибок
				Просто делайте аналогичный отступ и продолжайте описывать ситуацию как и при основном условии.

			Создание из расширения нового варианта использования:
					При необходимости можно сделать из альтернативного описания, подчиненный вариант использования (допустим один из шагов: пользователь сохраняет отчет. Вот сохранить нужно вынести в отедльный UC)

	Глава 9. Изменения в технологии и данных  (стр. 136 еще 6 страниц т.е. до Главы 11 т.е. еще 2 главы)