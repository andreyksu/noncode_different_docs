1. Методологии разработки ПО / подходы к разработке ПО.
2. Что такое тестирование? В чем его суть как процесса?
3. В чем цель тестирования?
        - Жизненный цикл тестирования STLC
        - С чего вы начнёте тестирование, какие цели будуте приследовать?
            - Какие действия будете выполнять (поочерёдно)?
                - Если говорим о предоставлении актуальной инфонмации для проектной группы - то как и чем вы это будете обеспечивать?
            - Как себе представляете процесс тестирования?
            - Какие недостатки вы видите/видели на предыдущем месте работы? Что планируете предпринять на новом месте работы?

        - Для инженера по тестированию важный навык коммуницирование и объяснение др. участникам.
            - В первом случае это узнать и уточнить поведение. Сформулировать и согласовать план проверок.
            - Во втором случае - это поясление выполняемых проверок, найденных дефектов, пояснение последствий.            
                - А для этого нужно разбираться в предмете тестирвоания.

                И это нужно не кому-то на проекте. А инженеру по тестированию т.к. именно эта роль предполагает эти действия.

            Задача рассказать подробно о дипломной работе. Технологии.
4. Что такое ошибка?
    Ошибка – несоответствие производимого продукта требованиям, прямым или косвенным.
        4.1. Когда нет требований, как понять что это ошибка или нет?      
        4.2. Часто мыжно слышать "эта сборка без ошибок?"
        4.3. Типы дефектов или виды дефектов.
        4.3. Приоритет и серьёзность. Как ранжировали?
5. Какие бывают требования?
    5.1. Атрибуты требований
6. Расскажите о тестовой документации: виды, цели.
7. Критерии входа в тестирование и выхода из тестировнаия.
    7.1. Когда хватит?
    7.2. Есть время, чем будем заниматься? Все говорят я всё проверил!!!
8. Виды и уровни тестирования.
    Виды
    По времени
    По уровню знакомства с системой.
9. Верификация и валидация
10. Что такое тест-план? Из чего состоит. Цели и задачи.
11. Методика/методология тестирования.
12. Из каких этапов состоит процесс тестирования?
13. Тест-дизайн
        - С чего начнёте?
        - Есть 10.000 требований. Всё документированно. Для проверки 4 дня. Ваши действия.
14. 7 принципов тестирования:
        Отсутствие ошибок - мнимое. Но есть сборки которые мы говорим - сборка без ошибок.
15. Что по вашему качество и как его оценить.
    Качество === Полезность (в экономике) Метрики
16. Покрытие кода. Метрики. Что будете покрывть?
--------------------------------------------------------------------------------------------------------------------------------------------------
1. Вопрос по предыдущему месту работы:
        Как построен процесс:
            - Как нарезаются задачи/планы/сроки на разработку?
            - Какие данные на вход тестированию (от БА, от РП):
                - Кто ставить задачу, кто говорит что смотрим?
            - Как строится процесс проверки (что проверять, а что нет?)
                - Как понять, что достаточно?
                - В части стабилизации - как оцениватеся полнота и достаточность проверки?
            - Чем ограничено тестирование релиза/сборки/исправления?
            - Что и как выполняется при проверке исправления?
            - Чем занимаетесь когда новых сборок нет или новая сборка есть но нового функционала нет?
                - Что проверяете, какие области берёте на проверку?
                - Как происходит декомпозиция в этом случае?
                - При наличии времени (в части регресса - проводятся доп. проверки)?
            - Что с безопасностью?
                - Кто ответчает за безопасность - отдельная позиция?
                - Аудит?
                    Доступность тех или иных возможностей тому или иному пользователю?
                    Когда получаем список документов/пользователей итд - в каком виде получаем их (ID?) а какое UUID?
2. Что является обязательным и что является достаточным при проверке?
    - Как выбираются тесты кейсы?
        - Как приоритезируются и приоритезируются ли?
    - Критический путь?
        - Модель исключений исключительных ситуаций;
        - Модель угроз (как человеческий фактор, так и технический)
        - Восстановление работы;
    - Как как оценить качественный софт или нет - какие метрики и значения есть?
3. Осталось время (есть оперативная пауза - задерживается сдача, заминка во внедрении)
    Ваши действия?
    Часто слышу, что я всё проверил, всё нормально. Что это означает?
        - Есть еще задачи?
--------------------------------------------------------------------
Задачи:
1. Есть функционал создания пользователя через WebAPI.
    - Этим функционалом и созданным пользователем мы пользуемся в дальнейшем.
    - Я как разработчик/аналитик/ProjectOwner - готов ответить на ваши вопросы и уточнения.

    - Какие проверки вы будете выполнять?
        - С чего начнёте?
        - Создание через WebAPI
            - Ответ - ведь WebAPI это основной функционал;
            - В БД - посмотреть в хранилище - ДА, но что это даст?
                - Ведь не факт, что мы работаем с SQL БД.
        - Рестарт сервера приложений?
        - Необходимая и достаточная проверка?
        - Есть интеграция в внешними системами?
            - Как получают данные из нас.
            - Могут ли получить данные из БД или прямо запросом?
                - Кто может получать данные - полномочия?

2. Есть многострочный редактор, у редактора есть настройка обрезать по заданной длине текст.
    Ваши проверки и уточняемые требования.
        - Обрезка по границе слова.
        - Если нет разделения строк?
        - Если на одной строке по одному символу?
--------------------------------------------------------------------
~ # * + = - < >