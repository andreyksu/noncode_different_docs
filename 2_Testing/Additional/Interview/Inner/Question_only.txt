1. Методологии разработки ПО / подходы к разработке ПО:
2. Что такое тестирование? В чем его суть как процесса?
3. В чем цель тестирования?
4. Что такое ошибка?
        4.1. Когда нет требований, как понять что это ошибка или нет?
        4.2. Типы дефектов или виды дефектов?
5. Какие бывают требования?
6. Расскажите о тестовой документации: виды, цели.
7. Из каких этапов состоит процесс тестирования?
8. Критерии входа в тестирование и выхода из тестировнаия.
    8.1. Когда хватит?
    8.2. Есть время, чем будем заниматься? Все говорят я всё проверил!!!
9. Виды и уровни тестирования.
    Виды
    По времени
    По уровню знакомства с системой.
10. Верификация и валидация
12. Что такое тест-план? Из чего состоит. Цели и задачи.
        Не путаме с чек листом.
13. Методика/методология тестирования.
14. Тест-дизайн
        - С чего начнёте?
        - Есть 10.000 требований. Всё документированно. Для проверки 4 дня. Ваши действия.
15. 7 принципов тестирования:
16. Вопрос по предыдущему месту работы:
        Как построен процесс:
            - Какие данные на вход тестированию
                - Кто ставить задачу, кто говорит что смотрим?
            - Как строится процесс проверки (что проверять, а что нет?)
                - Как понять, что достаточно?
            - Чем ограничено тестирование релиза/сборки/исправления?
            - Что и как выполняется при проверке исправления?
            - Чем занимаетесь когда новых сборок нет или новая сборка есть но нового функционала нет?
                Что проверяете, какие области берёте на проверку?
                Как происходит декомпозиция в этом случае?
            - Что с безопасностью?
                - Кто ответчает за безопасность?
                - Аудит?
                    Доступность тех или иных возможностей тому или иному пользователю?
                    Когда получаем список документов/пользователей итд - в каком виде получаем их (ID?) а какое?
17. Что является обязательным и что является достаточным?
    - Как выбираются тесты кейсы?
        Приоритезация?
    - Критический путь?
        - Модель исключений
        - Модель угроз (как человеческий фактор, так и технический).
        - Восстановление работы
    - Как как оценить качественный софт или нет?
18. Осталось время (есть оперативная пауза - задерживается сдача, заминка во внедрении)
    Ваши действия
    Часто слышу, что я всё проверил, всё нормально. Есть еще задачи?

--------------------------------------------------------------------
Задачи:
1. Есть функционал создания пользователя WebAPI этим функционалом и созданным пользователем мы пользуемся.
    Какие проверки вы будете выполнять?
        - С чего начнёте?
        - Создание через WebAPI.
        - Рестарт сервера приложений?
        - Необходимая и достаточная проверка?
        - Есть интеграция.

2. (!true || false && (!false || true && false))
3. Есть два int - нужно не использую 3й переменной поменять местами.
4. Нужно перевернуть byte
5. Нужно найти сумму цифр N-значного числа (пусть будет int).
    Два варианта, через деление и остаток и через строку(криво и косо но можно).
6. Рекурсия 5(8):
    public static int f(int x) {
        if (x>2){
            return f(x-1)+f(x-2);
        }
        else{
            return x;
        }
    }