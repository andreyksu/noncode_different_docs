# 	:комментарий
+ 	:плюсы, положительные моменты чего-либо
- 	:минусы, отритцательные стороны
~	:советы
* 	:пункты
** 	:подпункты 1
***	:подпункты 2
!!!	:важное
? 	:под вопросом, сомнение
$	
%
>
@
&


2.
	Изучение прикладной сферы наших ментальных способностей называется когнитивным проектированием или когнетикой
		* Когнитивное сознательное
		* Когнитивное бессознательное.
		
	Формирование привычек
		* Привычки поволяют делать нам что то не задумываясь. Т.е. бессознательное. При этом мы часто доводим что-то автоматизма.
		* Параллельно мы можем делать только то что бессознательно мы выполняем (идти и одновременно есть).
		* То что находится в когнитивном сознании мы можем выполянть только одно дело. Но одновременно думать мы можем лишь об одном.
		* Человеку требуется до 10с для переключения с одного контекста на др.
	
3.
	Содержание или контекст - это информация, которая находится в компьютере или другом устройстве, предназначенном для обработки информации и которая является для нас осмысленной и пполезной.
		* Создание или изменение содержания - эта та задача, котороую предпологается выполнить с помощью устройства.
	
	Проблема интерфейса с режимом невозможно определить в каком состоянии он сейчас находится. (Фанарик имеет два состояния - но если засунуть фанарик в сумку то невозможно понять в каком режиме находится фанарик и невозможно понять к чему приведет нажатие кнопки - к чему пирведет операция)
		~ Кнопки или др. элементы управления должн однозначно говорить о тек. состоянии.
		~ Используйте переключатели вместо выключателей (Заблокированно/разблакированно - см. режим у Андройда в виде ползунка вкл/выкл WiFi). Т.е. на компе лучше использовать радиобатан.
		~ Не используйте одинаковые команды в разных режимах (иначе они будут приводить к ошибкам).
		
	Вероятно нужно ограничивать вмеру настройку интерфейса - так как сделанные предыдущие настройки (допустим пердыдущим пользователем)  не изветсны и как их отменить неизвестно.
		- Так же возникают проблемы и при поддержке, не известно в каком состоянии интрефейс
		~ Вероятно стоит делать промежуточные сохранения настроек с возмоностью откатываться к ним
		~ Ну и конечно откат к исходным настройкам.
		- Так же есть наблюдение, что оптимальные настройки по мнению пользователя не являются в действительнсти оптимальными с точки зрения Usability или эргономики.
		
4.	
	Речь идет о колличественных показателях интерфейса.
		* От кол. вводимых символов (информации) до обработки и получения результатов.
	
	На примере автопилота в самолете когда попытались сделать в одном автопилоте поддержку нескольких существующих автопилотов
		* Подобный подход не только увеличивает время на изучения - так как пилоту приходится остваивать не только тек. автопилот но и др. автопилоты поддерживаемые этим унифицированным.
		* Вероятность возникновения ошибок возростает по причине того, что полностью копию не удается создать и какие-то кнопки играют либо дополнительную роль либо отличную от исходного автопилота.
		* По этой причине унификации стоит избегать. Да и стоимость разработки такого автопилота куда дороже.
		
5. 
	Унификация
		* Так как все компьютеры по сути одниковые и их интерфейсы для пользователя так же являются унифицированными, то можно пойти по тому же пути.
			** Сделать унифицированным интерфейс в рамках ОС. Выделить определенный набор команд и распостронить его на все ПО и должно предоставляться именно реализацией ОС а не конкретного ПО.
			** По большому счету не так уж и много этих команд, да и интерфейсы программ не так уж и различен.
				+ Т.е. если мы говорим о проверки орфографии то должно обеспечиваться на уровне ОС (и одинаково как для текстового редактора так и для имени файла)
			** При разработке интерфейса должен быть след. лозунг "все что выглядет как одно и тоже и есть одно и тоже."
			
		* Здесь так же предлогается уход от стандартного подхода к программам, где мы запускаем программу для определенного файла.
			** По хорошему система сама должна определять какую программу запустить
			
		* Так же идет речь про наименование файлов, моле это особо удобно, так как пользователь всеравно забывает как назвал и тяжело искать в иерархичном дереве.
			** Поиск в иерархичном дереве больше напоминает хождение по лабиринту.
			
6. 
	Интуитивный
		* Часто говорят про интуитивно понятный интерфейс. Иногда это слово означает ПРИВЫЧНЫЙ, ЕСТЕСТВЕННЫЙ, АНАЛОГИЧНЫЙ.
			** Обычно говорят про интерфейс когда пользователю не нужно объяснять как с этим работать. На часто нет необходимости объяснять когда пользователь где-то с этим встречался.
			** Пример приводится мышка. Люди первый раз увидев ее начинали говорить в неё как в микрофон или др. действия. Но стоило показать как с ней работать, пользователи мгновенно начинали работать с мышкой (вот что важно. Важно обучаемость)
			
	Пиктограммы
		* C одной стороны сейчас все избегают надписи а делают пиктограммы. 
			** Но при этом надписи переводят в hint (но с др. стороны хинт сводит на нет смысл пиктограмм и уход от надписей - получается двойная работа.)
			** Не все пиктограммы дают одинаковый смысл, да и одни и те же изоброжения могут быть различны в разных странах культурах.
			** По этой причине лучшим решением является все же оставить надписи. У пиктограмм есть один плюсь, они занимают место меньше.
			
	Уход от рабочего стола (к которому мы привыкли на ПК)
		* Рабочий стол довольно не удобен и не помогает пользователю быть в контексте предыдущей работы (т.е. человеку приходится вспоминать чем он занимался, при этом с работчего стола ему нунжно совершить определенные действия, что бы приступить к работе, возвращаясь опять на рабочий стол ему снова нужно предпринимать действия что бы перейти к др. задаче)
			** Для замены предлогается использовать масштабируемый интерфейс (подобно карте у Google - мы уменьшая масштаб выдим целую картину, при увеличения масштаба мы можемвидеть подробности и прочитать что нужно [в плане медицины мы момже спуститься до палаты и койек, посмотрев при этом какие койки заняты и др. информацию])

7.
	Исследования в области когнетики для сред программирования нашли еще меньше применения, чем для пользовательских интерфейсах.
		* Причина тому, сложность современных система и инструментов.
		* При этом автор понимает, что вернуться к исходной простоте не получиться и единственное что можно сделать, это улучшаить текущую ситуацию.
	
	Эдвард Тафт (EdwardTufte, 1983, с. 105) разработал принципы отображения информации, среди которых первыми тремя являются следующие:
		• данные следует показывать прежде всего остального;
		• следует максимально увеличивать долю чернил, используемых для отображения данных;
		• следует максимально уменьшать долю чернил, которые не используются для отображения данных.
	